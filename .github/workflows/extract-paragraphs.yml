name: Extract OECD TPG Paragraphs

on:
  push:
    paths:
      - '**/*.pdf'
  pull_request:
    paths:
      - '**/*.pdf'
  workflow_dispatch:
    inputs:
      pdf_path:
        description: 'Path to PDF file in repository'
        required: true
        default: 'oecd-tpg.pdf'

jobs:
  extract-paragraphs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Verify files exist
      run: |
        echo "Checking for required files..."
        ls -la
        if [ ! -f "extract_paragraphs.py" ]; then
          echo "Error: extract_paragraphs.py not found!"
          exit 1
        fi
        if [ ! -f "requirements.txt" ]; then
          echo "Error: requirements.txt not found!"
          exit 1
        fi
        echo "All required files found."
    
    - name: Find PDF files
      id: find-pdfs
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "pdf_files=${{ github.event.inputs.pdf_path }}" >> $GITHUB_OUTPUT
        else
          # Find all PDF files that were added or modified
          pdf_files=$(git diff --name-only ${{ github.event.before }}..${{ github.sha }} | grep -E '\.pdf$' | tr '\n' ' ')
          if [ -z "$pdf_files" ]; then
            # If no PDFs in diff, look for any PDF files in repo
            pdf_files=$(find . -name "*.pdf" -type f | head -5 | tr '\n' ' ')
          fi
          echo "pdf_files=$pdf_files" >> $GITHUB_OUTPUT
        fi
        echo "Found PDF files: $pdf_files"
    
    - name: Extract paragraphs from PDFs
      run: |
        pdf_files="${{ steps.find-pdfs.outputs.pdf_files }}"
        if [ -z "$pdf_files" ]; then
          echo "No PDF files found to process"
          exit 0
        fi
        
        for pdf_file in $pdf_files; do
          if [ -f "$pdf_file" ]; then
            echo "Processing: $pdf_file"
            # Create output directory based on PDF filename
            output_dir="extracted_chapters/$(basename "$pdf_file" .pdf)"
            python extract_paragraphs.py "$pdf_file" --output "$output_dir"
          else
            echo "Warning: PDF file not found: $pdf_file"
          fi
        done
    
    - name: Create extraction report
      run: |
        echo "# OECD TPG Paragraph Extraction Report" > extraction_report.md
        echo "" >> extraction_report.md
        echo "**Date:** $(date)" >> extraction_report.md
        echo "**Trigger:** ${{ github.event_name }}" >> extraction_report.md
        echo "" >> extraction_report.md
        
        if [ -d "extracted_chapters" ]; then
          echo "## Extracted Files" >> extraction_report.md
          echo "" >> extraction_report.md
          
          for summary_file in extracted_chapters/*/extraction_summary.json; do
            if [ -f "$summary_file" ]; then
              source_file=$(jq -r '.source_file' "$summary_file")
              total_chapters=$(jq -r '.total_chapters' "$summary_file")
              total_paragraphs=$(jq -r '.total_paragraphs' "$summary_file")
              echo "- **$source_file**: $total_chapters chapters, $total_paragraphs paragraphs extracted" >> extraction_report.md
            fi
          done
          
          echo "" >> extraction_report.md
          echo "## Chapter Files" >> extraction_report.md
          echo '```' >> extraction_report.md
          find extracted_chapters -name "chapter_*.json" -o -name "preface.json" | sort >> extraction_report.md
          echo '```' >> extraction_report.md
        else
          echo "No chapters were extracted." >> extraction_report.md
        fi
    
    - name: Upload extraction results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: oecd-tpg-paragraphs-${{ github.run_number }}
        path: |
          extracted_chapters/
          extraction_report.md
        retention-days: 90
    
    - name: Commit extracted paragraphs
      if: github.event_name != 'pull_request'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        if [ -d "extracted_chapters" ]; then
          git add extracted_chapters/
          git add extraction_report.md
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            echo "Changes detected, but auto-commit is disabled for security."
            echo "Please download the artifacts and commit manually if needed."
            echo "Extracted paragraphs are available in the workflow artifacts."
          fi
        fi
    
    - name: Comment on PR (if applicable)
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          if (fs.existsSync('extraction_report.md')) {
            const report = fs.readFileSync('extraction_report.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ðŸ“„ OECD TPG Paragraph Extraction Results\n\n${report}\n\n---\n*Extraction artifacts are available for download from the workflow run.*`
            });
          }
